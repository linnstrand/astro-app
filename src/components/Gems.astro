---
import { processData } from "../components/util";
import fullstack from "../fullstack.json";
import Hexagon from "./Gem.astro";

const data = processData(fullstack);
---

<div class="flex flex-col justify-center h-screen">
  <div
    id="visual"
    data-countchildren
    class="flex flex-col items-center justify-center text-white"
  >
    <div class="dot">
      <Hexagon
        title="Frontend"
        class="bg-gradient-to-r from-sky-500/50 via-cyan-300 to-sky-500/50"
      />
    </div>
    <div class="dot">
      <Hexagon
        title="Backend"
        class="bg-gradient-to-r from-indigo-500/50 via-blue-300 to-indigo-500/50"
      />
    </div>
    <div class="dot">
      <Hexagon
        title="Database"
        class="bg-gradient-to-r from-purple-500/50 via-fuchsia-300 to-purple-500/50"
      />
    </div>
    <div class="dot">
      <Hexagon
        title="Operations"
        class="bg-gradient-to-r from-red-500/50 via-pink-300 to-red-500/50"
      />
    </div>
    <div class="dot">
      <Hexagon
        title="Infrastructure"
        class="bg-gradient-to-r from-yellow-500/50 via-yellow-200 to-yellow-500/50"
      />
    </div>
    <div class="dot">
      <Hexagon
        title="Hexagons"
        class="bg-gradient-to-r from-green-500/50 via-emerald-300 to-green-500/50"
      />
    </div>
    <h1 class="text-effect text-4xl text-center p-6 absolute">Fullstack</h1>
  </div>
</div>

<style>
  @property --angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: true;
  }

  @keyframes adjust-angle {
    to {
      --angle: 360deg;
    }
  }

  :root {
    animation: adjust-angle linear 20s infinite;
    --radius: 25vmin;
    --tracksize: 20vmin;
  }

  /* Set variable used to calculate offset on circle path*/
  [data-countchildren] > :nth-child(1) {
    --nth-child: 1;
  }
  [data-countchildren] > :nth-child(2) {
    --nth-child: 2;
  }
  [data-countchildren] > :nth-child(3) {
    --nth-child: 3;
  }
  [data-countchildren] > :nth-child(4) {
    --nth-child: 4;
  }
  [data-countchildren] > :nth-child(5) {
    --nth-child: 5;
  }
  [data-countchildren] > :nth-child(6) {
    --nth-child: 6;
  }

  #visual {
    width: calc(var(--radius) * 2 + var(--tracksize));
    margin: 0 auto;
    position: relative;
  }

  .dot {
    --angle-offset: calc(var(--nth-child) * calc(360deg / 6));
    display: grid;
    place-content: center;
    width: var(--tracksize);
    aspect-ratio: 1;
    position: absolute;
    left: calc(50% - (var(--tracksize) / 2));
    top: calc(50% - (var(--tracksize) / 2));
    translate: calc(cos((var(--angle) + var(--angle-offset))) * var(--radius))
      calc(sin((var(--angle) + var(--angle-offset))) * var(--radius) * -1);
  }

  .text-effect {
    background-image: linear-gradient(
      109.6deg,
      theme(colors.red.500) 25%,
      theme(colors.yellow.500) 35%,
      theme(colors.green.500) 45%,
      theme(colors.sky.500) 55%,
      theme(colors.indigo.500) 70%,
      theme(colors.purple.500) 85%
    );
    background-clip: text;
    color: transparent;
    filter: contrast(110%) brightness(190%);
    font-family: sans-serif;
    font-weight: 700;
    font-size: 5vmin;
  }
</style>

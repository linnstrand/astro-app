---
import { processData } from "../components/util";
import fullstack from "../data/fullstack.json";
import Gem from "./Gem.astro";

const data = processData(fullstack);
---

<div
  id="visual"
  data-countchildren
  class="relative flex flex-col items-center justify-center mx-auto text-white"
>
  <Gem
    title="Frontend"
    class="bg-gradient-to-r from-sky-500/50 via-cyan-300 to-sky-500/50"
  />

  <Gem
    title="Backend"
    class="bg-gradient-to-r from-indigo-500/50 via-blue-300 to-indigo-500/50"
  />

  <Gem
    title="Database"
    class="bg-gradient-to-r from-purple-500/50 via-fuchsia-300 to-purple-500/50"
  />

  <Gem
    title="Operations"
    class="bg-gradient-to-r from-red-500/50 via-pink-300 to-red-500/50"
  />

  <Gem
    title="Infrastructure"
    class="bg-gradient-to-r from-yellow-500/50 via-yellow-200 to-yellow-500/50"
  />

  <Gem
    title="Hexagons"
    class="bg-gradient-to-r from-green-500/50 via-emerald-300 to-green-500/50"
  />

  <h1
    class="bg-rainbow contrast-200 brightness-150 bg-clip-text absolute p-6 font-sans text-4xl font-bold text-center text-transparent text-[5vmin]"
  >
    Fullstack
  </h1>
</div>

<style is:inline>
  @property --angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: true;
  }

  @keyframes adjust-angle {
    to {
      --angle: 360deg;
    }
  }

  :root {
    animation: adjust-angle linear 20s infinite;
    --radius: 25vmin;
    --tracksize: 20vmin;
  }

  #visual {
    height: calc(var(--radius) * 3);
  }
  /* Set variable used to calculate offset on circle path*/
  [data-countchildren] > :nth-child(1) {
    --nth-child: 1;
  }
  [data-countchildren] > :nth-child(2) {
    --nth-child: 2;
  }
  [data-countchildren] > :nth-child(3) {
    --nth-child: 3;
  }
  [data-countchildren] > :nth-child(4) {
    --nth-child: 4;
  }
  [data-countchildren] > :nth-child(5) {
    --nth-child: 5;
  }
  [data-countchildren] > :nth-child(6) {
    --nth-child: 6;
  }

  #visual {
    width: calc(var(--radius) * 2 + var(--tracksize));
  }
  .dot {
    --angle-offset: calc(var(--nth-child) * calc(360deg / 6));
    width: var(--tracksize);
    left: calc(50% - (var(--tracksize) / 2));
    top: calc(50% - (var(--tracksize) / 2));
    translate: calc(cos((var(--angle) + var(--angle-offset))) * var(--radius))
      calc(sin((var(--angle) + var(--angle-offset))) * var(--radius) * -1);
  }
</style>

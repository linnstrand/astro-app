---
const { title, description, link, image, class: className } = Astro.props;
---

<div
  class=`hex ${className} mx-[6px] my-[30px] text-center transition ease-in-out duration-300 saturate-[.3] hover:saturate-100 
    `
>
  <div class="corner-1"></div>
  <div class="corner-2"></div>
  <a
    class="border-teal-600/80 inner flex flex-col h-full text-teal-600 justify-center z-10"
    href={link}
  >
    <h4 class="flex justify-center text-xl font-bold">
      {title}
    </h4>
    <slot />
    {
      description && (
        <>
          <hr class="border-inherit w-2/3 mx-auto my-2 drop-shadow-sm" />
          <p class="font-bold">{description}</p>
        </>
      )
    }
  </a>
  {
    image && (
      <div class="image absolute" style={`background-image: url(${image});`} />
    )
  }
</div>

<style>
  :root {
    --width: 168px;
    --height: 97px;
  }

  .hex {
    font-family: Verdana, Geneva, Tahoma, sans-serif;
    position: relative;
    float: left;
    background-color: theme(colors.white);
    zoom: 1;
    width: var(--width);
    height: var(--height);
    filter: drop-shadow(4px 4px 4px theme(colors.gray.800 / 30%));

    .image {
      background-repeat: no-repeat;
      background-position: 50% 50%;
      background-size: auto var(--width);
      width: var(--width);
      height: 195px;
      top: -49px;
      left: 0px;
      clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    }

    .corner-1,
    .corner-2 {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: inherit;
      z-index: -2;
      overflow: hidden;
      backface-visibility: hidden;
    }

    .corner-1 {
      transform: rotate(60deg);
    }

    .corner-2 {
      transform: rotate(-60deg);
    }
  }
</style>

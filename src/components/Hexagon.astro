---
const { link, image, gradient, title, class: className } = Astro.props;

// Default to white background unless another tailwind bg is provided
const classes = [{ "bg-white": !className?.includes("bg-") }, className];
---

<div
  class:list={classes}
  class=`hex relative text-center transition ease-in-out duration-300 drop-shadow-strong saturate-[.3] hover:saturate-100`
>
  <div
    class="corner-1 -z-10 bg-inherit absolute top-0 left-0 w-full h-full overflow-hidden rotate-[60deg]"
  >
  </div>
  <div
    class="corner-2 -z-10 bg-inherit absolute top-0 left-0 w-full h-full overflow-hidden -rotate-[60deg]"
  >
  </div>
  {
    link && (
      <a
        class="flex flex-col items-center justify-center h-full"
        href={`${
          link?.includes("http") ? link : import.meta.env.BASE_URL + link
        }`}
        target={link?.includes("http") ? "_blank" : "_self"}
        aria-label={title}
        title={title}
      >
        <slot />
      </a>
    )
  }
  {gradient && <div class={`-z-[1] gradient absolute ${gradient}`} />}
  {}
</div>

<style>
  .hex {
    width: var(--side);
    aspect-ratio: calc(2 * sin(60deg)) / 1;

    .gradient,
    .image {
      top: -50%;
      width: inherit;
      aspect-ratio: sin(60deg) / 1;
      clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    }
  }
</style>
